from django.shortcuts import render, redirectfrom . import formsfrom .forms import *from django.contrib import messagesfrom django.contrib.auth.models import Userfrom django.db import transactionfrom django.contrib.auth.decorators import login_requiredfrom .token import account_activation_tokenfrom django.contrib.auth import get_user_modelfrom django.template.loader import render_to_stringfrom django.contrib.sites.shortcuts import get_current_sitefrom django.utils.http import urlsafe_base64_encode, urlsafe_base64_decodefrom django.utils.encoding import force_bytes, force_strfrom django.core.mail import EmailMessage, send_mail# html_message2 = render_to_string('shareafric_app/info2.html', context)# send_mail('Welcome to Wisteen Technology', '', 'wisteen.technology@shareafric.com', [email], html_message=html_message, auth_user='wisteen.technology@shareafric.com', auth_password='royrex123%%')def info_page(request):	return render(request, "teacher/info_page.html")def activate(request, uidb64, token):	User = get_user_model()	try:		uid = force_str(urlsafe_base64_decode(uidb64))		user = User.objects.get(pk=uid)	except:		User = None	if User is not None and account_activation_token.check_token(user, token):		user.is_active = True		user.save()		messages.success(request, "Thanks for your confirmation Now you can login Your Account!")		return redirect("teacher:info_page")	else:		messages.error(request, "Activation Link is invalid")		return redirect("teacher:info_page")	return redirect('wisdom:home')def activateEmail(request, user, to_mail):	mail_subject = "Activate Your User Account!"	message = render_to_string("teacher/confirmation_signup_message.html",{		'user':user,		'domain':get_current_site(request).domain,		'uid':urlsafe_base64_encode(force_bytes(user.pk)),		'token': account_activation_token.make_token(user),		'protocol':'https' if request.is_secure() else 'http'		})	# email = EmailMessage(mail_subject, message, to=[to_mail])	email =send_mail(mail_subject, '', 'wisteen.technology@shareafric.com', [to_mail], 		html_message=message, auth_user='wisteen.technology@shareafric.com', auth_password='royrex123%%')	if email:		messages.success(request, f"Hello {user}, a confirmation email has been sent to this {to_mail}")	else:		messages.error(request, f"Problem sending email to {to_mail}")# @user_not_authenticateddef register_teacher(request):	if request.method == "POST":		user_form = RegistrationForm(request.POST)		if user_form.is_valid():			user = user_form.save(commit = False)			user.is_active = False			user.save()			activateEmail(request, user, user_form.cleaned_data['email'])			return redirect("teacher:info_page")		else:			for error in list(user_form.errors.values()):				messages.error(request, error)	else:		user_form = RegistrationForm()	return render(request, "teacher/register_teacher.html",{		"u_form":user_form,		})@login_required@transaction.atomicdef update_profile(request):	if request.method == "POST":		user_form = UserForm(request.POST, instance=request.user)		user_profile_form = UserProfileForm(request.POST, request.FILES, instance=request.user.userprofile)		if user_form.is_valid():			user_form.save()			user_profile_form.save()			messages.success(request,"Updated Successfully!")			return redirect("teacher:update_profile")		else:			for error in list(user_form.errors.values()):				messages.error(request, error)	else:		user_form = UserForm(instance=request.user)		user_profile_form = UserProfileForm(instance=request.user.userprofile)	return render(request, "teacher/update_teacher.html", {		"u_form":user_form,		"u_profile_form":user_profile_form,		})